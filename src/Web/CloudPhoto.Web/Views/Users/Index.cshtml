@using CloudPhoto.Web.ViewModels.Users
@model UserPreviewViewModel

<div id="containerUploadMessage">
</div>

<div>
    <div class="row container-fluid">
        <div id="userAvatar" class="col-md-5">
            <form id="dragFileForm" method="post" enctype="multipart/form-data">
                <div id="dragAndDropArea" class="text-truncate">
                    @{ string avatarUrl; }
                    @if (string.IsNullOrEmpty(Model.UserAvatar))
                    {
                        avatarUrl = "/icon/emptyAvatar.png";
                    }
                    else
                    {
                        avatarUrl = @Model.UserAvatar;
                    }
                    <img id="avatarImage" src=@avatarUrl width="60" height="60" 
                         class="rounded-circle float-lg-right float-xl-right" alt=@Model.UserName>
                    <input id="file" class="custom-file-input" name="file" value="" type="file" size="1"
                           onchange="uploadAvatar('file');" />
                </div>
            </form>
        </div>
        <div id="UserDescription" class="col-md-7">
            <div class="row container">
                <div class="col-md-auto">
                    <p class="text-dark h3">@Model.UserName</p>
                </div>
                <div class="justify-content-end">
                    <input class="btn btn-success" type="button" value="Donate" alt="Support this photographer with a PayPal donation" />
                </div>
            </div>
        </div>
    </div>
</div>

<form id="keyForm" method="post"></form>
<form id="voteForm" method="post"></form>

<div class="row container-fluid">
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a id="uploadTab" class="nav-link active" href="#" data-toggle="tab" role="tab" onclick="getUploadImages(this)">
                Upload Images
            </a>
        </li>
        <li class="nav-item">
            <a id="likeTab" class="nav-link" href="#" data-toggle="tab" role="tab" onclick="getLikeImages(this)">
                Like Images
            </a>
        </li>
    </ul>
</div>

<br>

<div id="containerImages" class="col-md-12">
    <div id="partialView" class="row">
    </div>
</div>

<div id="progress" class="text-center" style="display: none;">
    <div class="spinner-border a" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

@section Scripts {
    <script>

        var messageHtmElement =`<div id="uploadMessage" class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none">
                 <p class="text-center">Avatart Updated. Change must commit after logut</p>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>`;

        var pagingData = new Object();
        pagingData.userId = '@Model.Id';
        pagingData.pageSize = 6;
        pagingData.pageIndex = 0;
        pagingData.type = "uploads";

        var hasAnoutherPages = true;
        var hasStartRequest = false;

        $(document).ready(
            function () {
                startPaging();
                addMessageElement();
            });

        $(window).scroll(function () {
            if ($(window).scrollTop() ==
                $(document).height() - $(window).height()) {
                if (!hasStartRequest) {
                    GetPagingData();
                }
            }
        });

        function addMessageElement() {
            var hideSearchBox = document.getElementById("containerUploadMessage");
            hideSearchBox.innerHTML = messageHtmElement;
            $('#uploadMessage').on('closed.bs.alert', addMessageElement);
        }

        function getUploadImages(control) {
            pagingData.type = "uploads";
            control.setAttribute("class", "nav-link");
            document.getElementById("likeTab").setAttribute("class", "nav-link active");
            startPaging();
        }

        function getLikeImages(control) {
            pagingData.type = "likes";
            control.setAttribute("class", "nav-link");
            document.getElementById("uploadTab").setAttribute("class", "nav-link active");
            startPaging();
        }

        function readPagingData() {
            var txtSearchData = $.cookie("pagingData");
            if (txtSearchData) {
                var tempSearchData = JSON.parse(txtSearchData);
                return tempSearchData;
            }
            else {
                return pagingData;
            }
        }

        function savePagingData(pagingData) {
            var txtSearchData = JSON.stringify(pagingData);
            $.cookie("pagingData", txtSearchData, { path: "/" });
        }

        function clearPagingData() {
            $.cookie("pagingData", "", { path: "/" });
        }

        function startPaging() {
            var partialView = $('#partialView');
            partialView.html("");

            pagingData.pageIndex = 1;
            savePagingData(pagingData);

            hasAnoutherPages = true;
            GetPagingData();
        }

        function GetPagingData() {
            hasStartRequest = true;

            if (!hasAnoutherPages) {
                return;
            }

            var token = $("#keyForm input[name=__RequestVerificationToken]").val();

            $.ajax({
                url: '/Users/GetPagingData',
                processData: false,
                contentType: false,
                type: "POST",
                headers: { 'X-CSRF-TOKEN': token },
                xhrFields: {
                    withCredentials: true
                },
                success: function (data) {
                    var partialView = $('#partialView');
                    if (data != '') {
                        partialView.append(data);
                        if (pagingData.pageIndex == 1) {
                            $('html, body').animate({ scrollTop: 0 }, 'slow');
                        }
                        pagingData.pageIndex++;
                        savePagingData(pagingData);
                    }
                    else {
                        hasAnoutherPages = false;
                        if (pagingData.pageIndex == 1) {
                            partialView.html("");
                        }
                    }
                },
                beforeSend: function () {
                    $("#progress").show();
                },
                complete: function () {
                    $("#progress").hide();
                    hasStartRequest = false;
                },
                error: function () {
                    alert("Error while retrieving data!");
                    $("#progress").hide();
                    hasStartRequest = false;
                }
            });
        }

        function sendVote(imageId) {
            var token = $("#voteForm input[name=__RequestVerificationToken]").val();

            var formData = new FormData();
            formData.append("imageId", imageId);

            let style = document.getElementById(imageId).getAttribute('style');
            if (style.includes("red")) {
                formData.append("isLike", false);
            }
            else {
                formData.append("isLike", true);
            }

            $.ajax(
                {
                    url: "/api/votes",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    complete: function () {
                        return false;
                    },
                    success: function (data) {
                        if (data.result == true) {
                            if (style.includes("red")) {
                                document.getElementById(imageId).setAttribute("style", "color:");
                            }
                            else {
                                document.getElementById(imageId).setAttribute("style", "color:red");
                            }
                        }
                    },
                    error: function (e, xhr) {
                        if (e.status == 401) {
                            window.location = '/Identity/Account/Login';
                        }
                    }
                }
            );

            return false;
        }

        function uploadAvatar(inputId) {
            var input = document.getElementById(inputId);
            var files = input.files;
            var formData = new FormData();

            for (var i = 0; i != files.length; i++) {
                formData.append("file", files[i]);
            }
            uploadFile(formData);
        }

        function uploadFile(formData) {

            formData.append("userId", pagingData.userId);
            var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();
            $.ajax(
                {
                    url: "/api/uploadfiles/UploadAvatart",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    complete: function () {
                        $('#loader').hide();
                    },
                    success: function (data) {
                        if (data.result == true) {
                            //set image source on image control
                            $("#avatarImage").attr("src", data.imageUrl);
                            updateAvatar(data.imageUrl);
                        }
                        else {
                            alert(data.errorMessage);
                        }
                    }
                }
            );
        }

        function updateAvatar(avatarUrl) {
            var formData = new FormData();

            formData.append("userId", pagingData.userId);
            formData.append("avatarUrl", avatarUrl);

            var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();
            $.ajax(
                {
                    url: "/Users/UpdateAvatar",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    complete: function () {
                        $('#loader').hide();
                    },
                    success: function (data) {
                        if (data == true) {
                            var hideMessageBox = document.getElementById("uploadMessage");
                            hideMessageBox.style.display = "block";
                        }
                    }
                }
            );
        }



    </script>
}
