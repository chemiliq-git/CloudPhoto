@using CloudPhoto.Web.ViewModels.Users
@model UserPreviewViewModel
@*use to show alets (myAlerts.js)*@
<div id="myMessageContainer">
</div>

<div>
    <div class="row container-fluid">
        <div id="userAvatar" class="col-md-5">
            <form id="dragFileForm" method="post" enctype="multipart/form-data">
                <div id="dragAndDropArea" class="text-truncate">
                    @{ string avatarUrl; }
                    @if (string.IsNullOrEmpty(Model.UserAvatar))
                    {
                        avatarUrl = "/icon/emptyAvatar.png";
                    }
                    else
                    {
                        avatarUrl = @Model.UserAvatar;
                    }
                    <img id="avatarImage" src=@avatarUrl width="60" height="60"
                         class="rounded-circle float-lg-right float-xl-right" alt=@Model.UserName>
                    <input id="file" class="custom-file-input" name="file" value="" type="file" size="1"
                           onchange="uploadAvatar('file');" />
                </div>
            </form>
        </div>
        <div id="UserDescription" class="col-md-7">
            <div class="row container">
                <div class="col-md-auto">
                    <p class="text-dark h3">@Model.UserName</p>
                </div>
                <div class="justify-content-end">
                    <input class="btn btn-success" type="button" value="Donate" alt="Support this photographer with a PayPal donation" />
                </div>
            </div>
        </div>
    </div>
</div>

<form id="keyForm" method="post"></form>

<div class="row container-fluid">
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a id="uploadTab" class="nav-link active" href="#" data-toggle="tab" role="tab" onclick="getUploadImages(this)">
                Upload Images
            </a>
        </li>
        <li class="nav-item">
            <a id="likeTab" class="nav-link" href="#" data-toggle="tab" role="tab" onclick="getLikeImages(this)">
                Like Images
            </a>
        </li>
    </ul>
</div>

<br>

<div id="containerImages" class="col-md-12">
    <div id="partialView" class="row">
    </div>
</div>

<div id="progress" class="text-center" style="display: none;">
    <div class="spinner-border a" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/js/myFloatPaging.js"></script>
    <script>
        var pagingData = new Object();
        pagingData.pageSize = 6;
        pagingData.pageIndex = 0;
        pagingData.userId = '@Model.Id';
        pagingData.type = "uploads";

        $(document).ready(
            function () {
                RegisterFloatPaging(readPagingData, savePagingData, '/Users/GetPagingData');
                startSearchData();
            });

        function getUploadImages(control) {
            pagingData.type = "uploads";
            control.setAttribute("class", "nav-link");
            document.getElementById("likeTab").setAttribute("class", "nav-link active");
            savePagingData(pagingData);
            startSearchData();
        }

        function getLikeImages(control) {
            pagingData.type = "likes";
            control.setAttribute("class", "nav-link");
            document.getElementById("uploadTab").setAttribute("class", "nav-link active");
            savePagingData(pagingData);
            startSearchData();
        }

        function readPagingData() {
            var txtSearchData = $.cookie("pagingData");
            if (txtSearchData) {
                var tempSearchData = JSON.parse(txtSearchData);
                return tempSearchData;
            }
            else {
                return pagingData;
            }
        }

        function savePagingData(pagingData) {
            var txtSearchData = JSON.stringify(pagingData);
            $.cookie("pagingData", txtSearchData, { path: "/" });
        }

        function clearPagingData() {
            $.cookie("pagingData", "", { path: "/" });
        }

        function uploadAvatar(inputId) {
            var input = document.getElementById(inputId);
            var files = input.files;
            var formData = new FormData();

            for (var i = 0; i != files.length; i++) {
                formData.append("file", files[i]);
            }
            uploadFile(formData);
        }

        function uploadFile(formData) {

            formData.append("userId", pagingData.userId);
            var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();
            $.ajax(
                {
                    url: "/api/uploadfiles/UploadAvatart",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    complete: function () {
                        $('#loader').hide();
                    },
                    success: function (data) {
                        if (data.result == true) {
                            //set image source on image control
                            $("#avatarImage").attr("src", data.imageUrl);
                            updateAvatar(data.imageUrl);
                        }
                        else {
                            // show message (myAlets.js)
                            myShowErrorMessage(data.errorMessage);
                        }
                    }
                }
            );
        }

        function updateAvatar(avatarUrl) {
            var formData = new FormData();

            formData.append("userId", pagingData.userId);
            formData.append("avatarUrl", avatarUrl);

            var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();
            $.ajax(
                {
                    url: "/Users/UpdateAvatar",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    complete: function () {
                        $('#loader').hide();
                    },
                    success: function (data) {
                        if (data == true) {
                            // show message (myAlets.js)
                            myShowSuccessMessage("Avatar updated. Change must applied after logout.");
                        }
                    }
                }
            );
        }

    </script>
}
