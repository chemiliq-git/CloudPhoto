@using CloudPhoto.Web.ViewModels.Images
@model CreateImageViewModel


@{
    ViewData["Title"] = "Create";
}

<h1 class="text-center">Upload Photo</h1>

<div class="row">
    <div class="col-12 ml-2">
        <form id="dragFileForm" method="post" enctype="multipart/form-data">
            <div id="dragAndDropArea" class="text-truncate drag-and-drop-area">
                Browse or Drag & drop a file into this area
                <input id="file" class="custom-file-input" name="file" value="" type="file" size="1" onchange="uploadControlFile('file');" />
            </div>
        </form>
    </div>
</div>

<div id="loader" class="text-center" style="display: none;">
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<br>

<div id="main-form" class="row container-fluid collapse">
    <div class="col-5 ml-1">
        <img id="uploadImageId" class="img-fluid" src="">
    </div>
    <div class="col-5 ml-1">
        <form id="form" asp-controller="images" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div asp-validation-summary="All"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control"
                        asp-items="@(new SelectList(Model.Categories,"Id","Name"))">
                    <option disabled selected>--- SELECT ---</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageTags" class="control-label"></label>
                <input id="inputTag" class="search-form form-controls" type="text" placeholder="Search or create tag" />
                <span asp-validation-for="ImageTags" class="text-danger"></span>
                <div class="form-group" id="newElements">
                </div>
            </div>
            <div hidden>
                <input asp-for="ImageTags" type="text" id="added-tags">
            </div>
            <div class="form-group" hidden>
                <label asp-for="ImageUrl" class="control-label"></label>
                <input id="image-url" asp-for="ImageUrl" class="form-control" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <input id="image-id" asp-for="ImageId" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-success btn-lg" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>

        function uploadControlFile(inputId) {
            var input = document.getElementById(inputId);
            var files = input.files;
            var formData = new FormData();

            for (var i = 0; i != files.length; i++) {
                formData.append("file", files[i]);
            }
            uploadFile(formData);
        }

        function uploadFile(formData) {

            var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();
            $.ajax(
                {
                    url: "/api/uploadfiles/UploadImage",
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    headers: { 'X-CSRF-TOKEN': token },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    complete: function () {
                        $('#loader').hide();
                    },
                    success: function (data) {
                        if (data.result == true) {
                            //set image source on image control
                            $("#uploadImageId").attr("src", data.imageUrl);
                            //fill input form image sourse
                            $("#image-url").attr("value", data.imageUrl);
                            $("#image-id").attr("value", data.fileId);
                            //show input form
                            $("#main-form").collapse('show');
                        }
                        else {
                            alert(data.errorMessage);
                        }
                    }
                }
            );
        }

        function initializeDragAndDropArea() {
            if (typeof (window["FileReader"]) == "undefined") {
                return;
            }

            var dragAndDropArea = $("#dragAndDropArea");

            if (dragAndDropArea.length == 0) {
                return;
            }

            dragAndDropArea[0].ondragover = function () {
                dragAndDropArea.addClass("drag-and-drop-area-dragging");
                return false;
            };

            dragAndDropArea[0].ondragleave = function () {
                dragAndDropArea.removeClass("drag-and-drop-area-dragging");
                return false;
            };

            dragAndDropArea[0].ondrop = function (event) {
                dragAndDropArea.removeClass("drag-and-drop-area-dragging");

                var formData = new FormData();

                for (var i = 0; i != event.dataTransfer.files.length; i++) {
                    formData.append("file", event.dataTransfer.files[i]);
                }
                uploadFile(formData);

                return false;
            }
        }

        function addNewTag(newTag) {

            //change hide field
            var data = document.getElementById("added-tags").value
            var js;
            if (data != '') {
                js = JSON.parse(data);
                if (js.includes(newTag)) {
                    return;
                }

                json = js.push(newTag);
            }
            else {
                js = new Array(newTag);
            }

            
            var btntag = document.createElement("button");
            btntag.id = newTag;
            btntag.className = "btn-success rounded m-1";
            btntag.onclick = function () {
                var data = document.getElementById("added-tags").value
                var js = JSON.parse(data);
                var filtered = js.filter(function (value, index, arr) {
                    return value != btntag.id;
                });

                if (filtered != '') {
                    document.getElementById("added-tags").value = JSON.stringify(filtered);
                }
                else {
                    document.getElementById("added-tags").value = '';
                }
                btntag.remove();
            };

            //add icon
            var icon = document.createElement("i");
            icon.className = "far fa-times-circle";
            btntag.appendChild(icon);
            //add text
            var text = document.createTextNode(newTag);
            btntag.appendChild(text);
            //add btntag on document
            var element = document.getElementById("newElements");
            element.appendChild(btntag);
            
            document.getElementById("added-tags").value = JSON.stringify(js);
        }

        function lisiningForAddTag() {
            const node = document.getElementById("inputTag");
            node.addEventListener("keydown", function (event) {
                if (event.key === "Enter") {
                    addNewTag(node.value);
                    //delete input data
                    node.value = "";

                    event.returnValue = false;
                    event.cancel = true;
                }
            });
        }

        function configAutoCompleteTags() {
            $('#inputTag').keyup(function (event) {
                var formData = new FormData();
                formData.append("searchData", $('#inputTag').val());
                var token = $("#dragFileForm input[name=__RequestVerificationToken]").val();

                $('#inputTag').autocomplete(
                    {
                        scroll: true,
                        selectFirst: false,
                        autoFocus: false,
                        source: function (request, response) {
                            $.ajax(
                                {
                                    type: "POST",
                                    data: formData,
                                    url: "/tags/autocompletesearch",
                                    processData: false,
                                    contentType: false,
                                    headers: { 'X-CSRF-TOKEN': token },
                                    success: function (data) {
                                        response($.map(data, function (item) {
                                            return {
                                                label: item.name,
                                                val: item.id
                                            }
                                        }));
                                    },
                                    error: function (result) { }
                                });
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            addNewTag(ui.item.value)
                            event.returnValue = false;
                            event.cancel = true;

                            return false;
                        }
                    });
            });
        }

        $(document).ready(
            function () {
                initializeDragAndDropArea();

                lisiningForAddTag();

                configAutoCompleteTags();
            }
        );

        $.validator.setDefaults({ ignore: '' });
    </script>
}
