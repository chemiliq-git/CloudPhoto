@using CloudPhoto.Web.ViewModels.Images
@using System.Security.Claims;

@model ImagePreviewViewModel

@{
    string likeIconId = Model.Id + "likeIconId";
    int userIsLike = Model.IsLike ? 0 : 1;

    string likeIconColor = string.Empty;
    if (Model.IsLike)
    {
        likeIconColor = "red";
    }

    string followButtonText;
    if (Model.IsFollow)
    {
        followButtonText = "Following";
    }
    else
    {
        followButtonText = "Follow";
    }

    var parms = new Dictionary<string, string>
{
                { "imageId", Model.Id },
            };
}

@*change close button position with css*@
<button id="close-button" type="button" class="close" data-dismiss="modal" aria-label="Close">
    <span aria-hidden="true">&times;</span>
</button>


<div class="d-none d-md-block">
    <div class="row container">
        <div id="authorSection" class="col-xl-7 col-lg-7 col-md-7">
            <div class="row container">
                <div class="h-100 col-xl-2 col-lg-2 col-md-3 col-sm-2 d-flex justify-content-sm-start">
                    <a class="nav-link" asp-controller="Users" asp-action="Index" asp-route-id=@Model.AuthorId>
                        <img src=@Model.AuthorAvatarUrl width="60" height="60"
                             class="rounded-circle">
                    </a>
                </div>
                <div class="col-xl-6 col-lg-6 col-md-9 col-sm-10">
                    <a class="nav-link" asp-controller="Users" asp-action="Index" asp-route-id=@Model.AuthorId>
                        @Model.AuthorName
                    </a>
                    <p class="text-truncate">@Model.AuthorEmail</p>
                </div>
                <div class="col-xl-4 col-lg-4 col-md-12 col-sm-12 h-100 d-flex align-items-center">
                    @{
                        if (this.User.Identity.IsAuthenticated
                                                  && Model.AuthorId != this.User.FindFirst(ClaimTypes.NameIdentifier).Value)
                        {
                            if (!string.IsNullOrEmpty(Model.PayPalEmail))
                            {
                                @Html.ActionLink(
                                      "Donate",
                                      "donate",
                                      "users",
                                      new { @id = Model.AuthorId },
                                      new { @class = "btn btn-outline-dark btn-sm float-left m-1" })
                            }

                            <button id="followButton" type="button" class="btn btn-outline-dark btn-sm float-left m-1"
                                    onclick="myInvokeSubscribe(this,'@Model.AuthorId'); return false;">
                                @followButtonText
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
        <div id="imageActionSection" class="col-xl-5 col-lg-5 col-md-5 d-flex mb-auto justify-content-end">
            <button id="likeButton" type="button" class="btn btn-outline-dark m-1"
                    onclick="mySendImageVoteOnPreviewForm(this, '@Model.Id', @Model.LikeCount, @userIsLike); return false;">
                <i id=@likeIconId class="fas fa-heart" style="color:@likeIconColor;"></i>
                @Model.LikeCount likes
            </button>

            <form method="post">
                <button asp-controller="images" asp-action="DownloadImage" asp-all-route-data="parms"
                        id="btnDownload" type="submit" class="btn btn-outline-dark m-1">
                    <i class="fas fa-download"></i>
                    Download
                </button>
            </form>

        </div>
    </div>
</div>

<div class="justify-content-center m-preview-container" style="position:relative">
    <img id="thumbnailImage" class="img-fluid mx-auto d-block "
         src=@Model.ThumbnailImageUrl>

    @{if (Model.ImageIndex != 1)
        { <a id="leftArrow" href="#" class="my-left-arrow" onclick="helper.navigationToLeft(); return false">
                <i class="fas fa-chevron-left"></i>
            </a>
        }
    }

    @{if (!Model.IsEndedImage)
        {
            <a id="rightArrow" href="#" class="my-right-arrow" onclick="helper.navigationToRigth(); return false">
                <i class="fas fa-chevron-right"></i>
            </a>
        }
    }
</div>

<div class="d-block d-md-none d-flex justify-content-center">
    <div class="container row">
        <div class="col-sm-6">
            <form method="post">
                <button id="likeButton" type="button" class="btn btn-block btn-outline-dark m-1"
                        onclick="mySendImageVoteOnPreviewForm(this, '@Model.Id', @Model.LikeCount, @userIsLike); return false;">
                    <i id=@likeIconId class="fas fa-heart" style="color:@likeIconColor;"></i>
                    @Model.LikeCount likes
                </button>
            </form>
        </div>
        <div class="col-sm-6 ">
            <form method="post">
                <button asp-controller="images" asp-action="DownloadImage" asp-all-route-data="parms"
                        id="btnDownload" type="submit" class="btn btn-block btn-outline-dark m-1">
                    <i class="fas fa-download"></i>
                    Download
                </button>
            </form>
        </div>
        <div class="col-12 row border border-dark rounded m-1 p-2">
            <div class="row col-12">
                <div id="userAvatar" class="col-sm-2 col-3 justify-content-start">
                    <img id="avatarImage" src=@Model.AuthorAvatarUrl referrerpolicy="no-referrer" width="40" height="40"
                         class="rounded-circle" alt=@Model.AuthorName>
                </div>
                <div class="row col-sm-10 col-8 justify-content-start ">
                    <div class="col-12">
                        <p class="text-dark h6">@Model.AuthorName</p>
                    </div>
                    <div class="col-12 justify-content-start">
                        <p class="small">@Model.Description</p>
                    </div>
                </div>
            </div>
              
            @if (this.User.Identity.IsAuthenticated
                                           && Model.AuthorId != this.User.FindFirst(ClaimTypes.NameIdentifier).Value)
                {
                    @if (!string.IsNullOrEmpty(Model.PayPalEmail))
                    {
                        <div class="col-sm-6">
                            @Html.ActionLink(
                            "Donate",
                            "donate",
                            "users",
                            new { @id = Model.AuthorId },
                            new { @class = "btn btn-block btn-outline-dark btn-sm float-left m-1" })
                        </div>
                    }


                    <div class="col-sm-6">
                        <button id="followButton" type="button" class="btn btn-block btn-outline-dark btn-sm float-left m-1"
                                onclick="myInvokeSubscribe(this,'@Model.AuthorId'); return false;">
                            @followButtonText
                        </button>
                    </div>
                }
        </div>
    </div>
</div>
