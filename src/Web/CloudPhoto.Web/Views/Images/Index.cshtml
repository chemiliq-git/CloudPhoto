@using CloudPhoto.Web.ViewModels.Images
@model IEnumerable<ListImageViewModel>

@{
    ViewData["Title"] = "Index";
}

<form id="keyForm" method="post"></form>

<div class="row container-fluid">
    <div id="side-search" class="col-md-2" style="display:none">
        @* Load filter bar *@
        @await Component.InvokeAsync("FilterBar")
    </div>
    <div id="hide-side-search" @*style="display:none"*@>
        <a href="#" onclick="onclickShowSearcBar()">
            <i class="fas fa-search"></i>
            Show search
        </a>
    </div>
    <div id="containerImages" class="col-md-12">
        <div id="partialView" class="row">
            <partial name="_ImageListPartial" model="@Model" data="@Model">
        </div>
    </div>
</div>

<div id="progress" class="text-center" style="display: none;">
    <div class="spinner-border a" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>


@section Scripts {
    <script>

        var searchData = new Object();
        searchData.pageSize = 6;
        searchData.pageIndex = 0;
        searchData.selectCategory = [];
        searchData.searchText = "";

        var hasAnoutherPages = true;
        var hasStartRequest = false;

        $(document).ready(
            function () {
                hookToCloseSideMenu();
                hookToClearAllFilter();

                configPage();
                configAutoCompleteTags(onStartAutoCompleteSearch, undefined);
                startSearchData();
            });

        function onStartAutoCompleteSearch() {
            searchData = readSearchData();
            searchData.searchText = $('#searchImageTag').val();
            saveSearchData();
        }

        function readSearchData() {
            var txtSearchData = $.cookie("searchData");
            if (txtSearchData) {
                var tempSearchData = JSON.parse(txtSearchData);
                return tempSearchData;
            }
            else {
                return searchData;
            }
        }

        function saveSearchData(searchData) {
            var txtSearchData = JSON.stringify(searchData);
            $.cookie("searchData", txtSearchData, { path: "/" });
        }

        function clearSearchData() {
            $.cookie("searchData", "", { path: "/" });
            searchData.selectCategory = [];
            searchData.searchText = "";
        }

        $(window).scroll(function () {
            if ($(window).scrollTop() ==
                $(document).height() - $(window).height()) {
                if (!hasStartRequest) {
                    GetData();
                }
            }
        });

        function checkUncheckCategory(checkBox) {
            searchData = readSearchData();

            if (checkBox.checked == true) {
                searchData.selectCategory.push(checkBox.id);
            }
            else {
                var filtered = searchData.selectCategory.filter(function (value, index, arr) {
                    return value != checkBox.id;
                });
                searchData.selectCategory = filtered;
            }
            saveSearchData(searchData);
            startSearchData();
        }

        function startSearchData() {
            var partialView = $('#partialView');
            partialView.html("");

            searchData.pageIndex = 1;
            saveSearchData(searchData);

            hasAnoutherPages = true;
            GetData();
        }

        function configPage() {
            var showSearchBar = $.cookie("show-search-bar");
            if (showSearchBar != null) {
                toggleMenu();
            }

            searchData = readSearchData();

            showCheckedCategory(searchData.selectCategory);

            $('#searchImageTag').val(searchData.searchText);
        }

        function showCheckedCategory(arraySelectCategories) {
            arraySelectCategories.forEach(element =>
                document.getElementById(element).checked = true);
        }

        function onclickShowSearcBar() {
            $.cookie("show-search-bar", "true", { path: "/Images" });
            toggleMenu();
        }

        function hookToCloseSideMenu() {
            const node = document.getElementById("sideCloseBtn");
            node.addEventListener("click", function (event) {
                $.cookie("show-search-bar", "false", { path: "/Images" });
                toggleMenu();
            });
        }

        function hookToClearAllFilter() {
            const node = document.getElementById("clearFilter");
            node.addEventListener("click", function (event) {
                clearSearchData();
                $('#groupCheckBox input:checked').each(function () {
                    this.checked = false;
                });

                $('#searchImageTag').val(null);

                startSearchData();
            });
        }

        function toggleMenu() {
            var show = $.cookie("show-search-bar");
            var searchBox = document.getElementById("side-search");
            if (show === "true") {
                searchBox.style.display = "block";
            } else {
                searchBox.style.display = "none";
            }

            var hideSearchBox = document.getElementById("hide-side-search");
            if (show === "false") {
                hideSearchBox.style.display = "block";
            } else {
                hideSearchBox.style.display = "none";
            }

            var containerImage = document.getElementById("containerImages");
            if (show === "false") {
                containerImage.classList.remove("col-md-10");
                containerImage.classList.add("col-md-12")
            } else {
                containerImage.classList.remove("col-md-12");
                containerImage.classList.add("col-md-10")
            }

        }

        function GetData() {
            hasStartRequest = true;

            if (!hasAnoutherPages) {
                return;
            }

            var token = $("#keyForm input[name=__RequestVerificationToken]").val();

            searchData = readSearchData();

            var formData = new FormData();
            formData.append("page", searchData.pageIndex);
            formData.append("perPage", searchData.pageSize);
            formData.append("searchText", searchData.searchText);
            if (searchData.selectCategory != null) {
                formData.append("filterByCategories", JSON.stringify(searchData.selectCategory));
            }

            $.ajax({
                url: '/images/GetSearchingData',
                data: formData,
                processData: false,
                contentType: false,
                type: "POST",
                headers: { 'X-CSRF-TOKEN': token },
                xhrFields: {
                    withCredentials: true
                },
                success: function (data) {
                    var partialView = $('#partialView');
                    if (data != '') {
                        partialView.append(data);
                        if (searchData.pageIndex == 1) {
                            $('html, body').animate({ scrollTop: 0 }, 'slow');
                        }
                        searchData.pageIndex++;
                        saveSearchData(searchData);
                    }
                    else {
                        hasAnoutherPages = false;
                        if (searchData.pageIndex == 1) {
                            partialView.html("");
                        }
                    }
                },
                beforeSend: function () {
                    $("#progress").show();
                },
                complete: function () {
                    $("#progress").hide();
                    hasStartRequest = false;
                },
                error: function () {
                    alert("Error while retrieving data!");
                }
            });
        }
    </script>
}
